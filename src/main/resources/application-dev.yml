server:
  port: ${API_PORT:8980}
  servlet:
    context-path: "/vacancy/api"
  error:
    include-message: always

spring:
  # for h2 database
  #  h2:
  #    console:
  #      enabled: true
  #      path: /h2
  #      settings:
  #        web-allow-others: true
  dataSource:
    #  Для интеграционных тестов не отключаю
    #  База данных уже закрыта (чтобы отключить автоматическое закрытие базы данных при останове JVM,
    #  добавьте ";DB_CLOSE_ON_EXIT=FALSE" в URL)
    url: jdbc:postgresql://192.168.1.57:5432/vacancy
    username: ${PG_USER:postgres}
    password: ${PG_PASSWORD:postgres}
    #  hibernate:
    #    ddl-auto: create-drop
    #    dialect: org.hibernate.dialect.MySQL57Dialect
    #        generate_statistics: true
  jpa:
    # show SQL statements in console.
    show-sql: true
    #    database-platform: hibernate.dialect.MySQL57Dialect
    properties:
      hibernate:
        format_sql: true
        hbm2ddl:
          import_files_sql_extractor: org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor
  flyway:
    enabled: true
    generate_statistics: true
    url: jdbc:postgresql://127.0.0.1:5432/vacancy
    user: ${PG_USER:postgres}
    password: ${PG_PASSWORD:postgres}
  hibernate:
    ddl-auto: create-drop
    dialect: org.hibernate.dialect.MySQL57Dialect
    #        generate_statistics: true
#  cache:
#    type: caffeine
#    cache-names: allGroupProductDTO
#  autoconfigure:
#    exclude:
#      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
logging:
  level:
    root: INFO
    sql: debug
    org.hibernate.orm.jdbc.bind: trace
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql: TRACE
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.hibernate.type.descriptor.sql.BasicExtractor: TRACE
    org.springframework.jdbc.core: DEBUG
  file:
    path: log/
  pattern: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
management:
  health:
    probes:
      enabled: true
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
    health:
      show-details: always
      enabled: true
    caches:
      enabled: true
    info:
      enabled: true
      show-details: always
    beans:
      enabled: true
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"
      base-path: "/vacancy/api/actuator"
  metrics:
    tags:
      application: ${spring.application.name}
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
  server:
    port: 8988


